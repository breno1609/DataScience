!pip install matplotlib
!pip install seaborn
!pip install scikit-learn
-------------------------------------------------------
import pandas as pd

tabela = pd.read_csv("advertising.csv")
display(tabela)
--------------------------------------------------------
import seaborn as sns
import matplotlib.pyplot as plt

# Cria o grafico
sns.heatmap(tabela.corr(), cmap="Wistia", annot=True)
# Mostra o grafico
plt.show()
-----------------------------------------------------
y = tabela["Vendas"]
x = tabela[["TV", "Radio", "Jornal"]]

from sklearn.model_selection import train_test_split

x_treino, x_teste, y_treino, y_teste = train_test_split(x,y, test_size=0.3, random_state=1)
--------------------------------------------------------------
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor

# Criar os modelos
modelo_regressaolinear = LinearRegression()
modelo_arvoredecisao = RandomForestRegressor()

# Treinar os modelos
modelo_regressaolinear.fit(x_treino, y_treino)
modelo_arvoredecisao.fit(x_treino, y_treino)
----------------------------------------------------------------
previsao_regressaolinear = modelo_regressaolinear.predict(x_teste) 
previsao_arvoredecisao = modelo_arvoredecisao.predict(x_teste)

from sklearn import metrics

print(metrics.r2_score(y_teste, previsao_regressaolinear))
print(metrics.r2_score(y_teste, previsao_arvoredecisao))
---------------------------------------------------------------------------------
# A arvore de decisao é o melhor modelo, vamos usar ele para fazer as previsoes
tabela_auxiliar = pd.DataFrame()
tabela_auxiliar["y_teste"] = y_teste
tabela_auxiliar["Previsao Regressao Linear"] = previsao_regressaolinear
taela_auxiliar["Previsao ArvoreDecisao"] = previsao_arvoredecisao

plt.figure(figsizw=(15,6))
sns.line
------------------------------------------------------------------------------
# Importa a tabela com as novas informações qie você quer preve

nova_tabela = pd.read_csv("novos.csv")
display(nova_tabela)

previsao = modelo_arvoredecisao.predict(nova_tabela)
print(previsao)
